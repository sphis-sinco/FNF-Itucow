import flixel.FlxG;
import funkin.modding.module.Module;
import funkin.util.ReflectUtil;
import funkin.play.PlayState;

using StringTools;

class AntialiasedPixelIcons extends Module {
	var currentSubState:String;
	var freeplaySubState:Bool;

	var antialiasCapsuleIcons:Array<String> = ['huvi', 'futry', 'ruvuy'];

	public function new() {
		// This registers a NAME for the module, which might be needed later!
		super("antialiased-pixel-icons");
	}

	public override function onSubStateOpenEnd(event:SubStateScriptEvent) {
		currentSubState = ReflectUtil.getClassNameOf(FlxG.state.subState);
		freeplaySubState = (currentSubState == "funkin.ui.freeplay.FreeplayState");
	}

	public function onUpdate(event:UpdateScriptEvent)
	{
		freeplayUpdate();
	}

	public function freeplayUpdate() {
		if (!freeplaySubState || PlayState.instance != null)
			return;

		var freeplay = FlxG.state.subState;

		if ((freeplay ?? null) == null)
			return;

		if ((freeplay.grpCapsules ?? null) == null)
			return;

		for (capsule in freeplay.grpCapsules) {
			// trace(capsule.index);

			var antialiasPixelIcon = false;
			var dad = '';

			if (capsule.freeplayData != null) {
				dad = capsule.freeplayData.songCharacter;
			}

			antialiasPixelIcon = antialiasCapsuleIcons.contains(dad);

			if (antialiasPixelIcon)
			{
				// capsule.pixelIcon.antialiasing = true;
			}
		}
	}
}
